State 4 conflicts: 9 shift/reduce


Grammar

    0 $accept: commands $end

    1 commands: /* empty */
    2         | commands command

    3 command: expr ';'
    4        | DUMP ';'
    5        | CLEAR ';'

    6 expr: equal

    7 equal: logic_expr
    8      | VAR '=' equal
    9      | VAR '+' '=' equal
   10      | VAR '-' '=' equal
   11      | VAR '*' '=' equal
   12      | VAR '/' '=' equal
   13      | VAR '%' '=' equal
   14      | VAR '>' '>' '=' equal
   15      | VAR '&' '=' equal
   16      | VAR '^' '=' equal
   17      | VAR '|' '=' equal

   18 logic_expr: shift_expr
   19           | logic_expr '&' shift_expr
   20           | logic_expr '^' shift_expr
   21           | logic_expr '|' shift_expr

   22 shift_expr: add_sub_expr
   23           | shift_expr '<' '<' add_sub_expr
   24           | shift_expr '>' '>' add_sub_expr

   25 add_sub_expr: mul_div_expr
   26             | add_sub_expr '+' mul_div_expr
   27             | add_sub_expr '-' mul_div_expr

   28 mul_div_expr: neg_not_expr
   29             | mul_div_expr '*' neg_not_expr
   30             | mul_div_expr '/' neg_not_expr
   31             | mul_div_expr '%' neg_not_expr

   32 neg_not_expr: pren
   33             | '-' pren
   34             | '~' pren

   35 pren: '(' expr ')'
   36     | VAR
   37     | NUM


Terminals, with rules where they appear

$end (0) 0
'%' (37) 13 31
'&' (38) 15 19
'(' (40) 35
')' (41) 35
'*' (42) 11 29
'+' (43) 9 26
'-' (45) 10 27 33
'/' (47) 12 30
';' (59) 3 4 5
'<' (60) 23
'=' (61) 8 9 10 11 12 13 14 15 16 17
'>' (62) 14 24
'^' (94) 16 20
'|' (124) 17 21
'~' (126) 34
error (256)
NUM (258) 37
VAR (259) 8 9 10 11 12 13 14 15 16 17 36
DUMP (260) 4
CLEAR (261) 5


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
commands (23)
    on left: 1 2, on right: 0 2
command (24)
    on left: 3 4 5, on right: 2
expr (25)
    on left: 6, on right: 3 35
equal (26)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 6 8 9 10 11 12
    13 14 15 16 17
logic_expr (27)
    on left: 18 19 20 21, on right: 7 19 20 21
shift_expr (28)
    on left: 22 23 24, on right: 18 19 20 21 23 24
add_sub_expr (29)
    on left: 25 26 27, on right: 22 23 24 26 27
mul_div_expr (30)
    on left: 28 29 30 31, on right: 25 26 27 29 30 31
neg_not_expr (31)
    on left: 32 33 34, on right: 28 29 30 31
pren (32)
    on left: 35 36 37, on right: 32 33 34


state 0

    0 $accept: . commands $end

    $default  reduce using rule 1 (commands)

    commands  go to state 1


state 1

    0 $accept: commands . $end
    2 commands: commands . command

    $end   shift, and go to state 2
    NUM    shift, and go to state 3
    VAR    shift, and go to state 4
    DUMP   shift, and go to state 5
    CLEAR  shift, and go to state 6
    '-'    shift, and go to state 7
    '~'    shift, and go to state 8
    '('    shift, and go to state 9

    command       go to state 10
    expr          go to state 11
    equal         go to state 12
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 2

    0 $accept: commands $end .

    $default  accept


state 3

   37 pren: NUM .

    $default  reduce using rule 37 (pren)


state 4

    8 equal: VAR . '=' equal
    9      | VAR . '+' '=' equal
   10      | VAR . '-' '=' equal
   11      | VAR . '*' '=' equal
   12      | VAR . '/' '=' equal
   13      | VAR . '%' '=' equal
   14      | VAR . '>' '>' '=' equal
   15      | VAR . '&' '=' equal
   16      | VAR . '^' '=' equal
   17      | VAR . '|' '=' equal
   36 pren: VAR .

    '='  shift, and go to state 19
    '+'  shift, and go to state 20
    '-'  shift, and go to state 21
    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '>'  shift, and go to state 25
    '&'  shift, and go to state 26
    '^'  shift, and go to state 27
    '|'  shift, and go to state 28

    '+'       [reduce using rule 36 (pren)]
    '-'       [reduce using rule 36 (pren)]
    '*'       [reduce using rule 36 (pren)]
    '/'       [reduce using rule 36 (pren)]
    '%'       [reduce using rule 36 (pren)]
    '>'       [reduce using rule 36 (pren)]
    '&'       [reduce using rule 36 (pren)]
    '^'       [reduce using rule 36 (pren)]
    '|'       [reduce using rule 36 (pren)]
    $default  reduce using rule 36 (pren)


state 5

    4 command: DUMP . ';'

    ';'  shift, and go to state 29


state 6

    5 command: CLEAR . ';'

    ';'  shift, and go to state 30


state 7

   33 neg_not_expr: '-' . pren

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '('  shift, and go to state 9

    pren  go to state 32


state 8

   34 neg_not_expr: '~' . pren

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '('  shift, and go to state 9

    pren  go to state 33


state 9

   35 pren: '(' . expr ')'

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    expr          go to state 34
    equal         go to state 12
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 10

    2 commands: commands command .

    $default  reduce using rule 2 (commands)


state 11

    3 command: expr . ';'

    ';'  shift, and go to state 35


state 12

    6 expr: equal .

    $default  reduce using rule 6 (expr)


state 13

    7 equal: logic_expr .
   19 logic_expr: logic_expr . '&' shift_expr
   20           | logic_expr . '^' shift_expr
   21           | logic_expr . '|' shift_expr

    '&'  shift, and go to state 36
    '^'  shift, and go to state 37
    '|'  shift, and go to state 38

    $default  reduce using rule 7 (equal)


state 14

   18 logic_expr: shift_expr .
   23 shift_expr: shift_expr . '<' '<' add_sub_expr
   24           | shift_expr . '>' '>' add_sub_expr

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40

    $default  reduce using rule 18 (logic_expr)


state 15

   22 shift_expr: add_sub_expr .
   26 add_sub_expr: add_sub_expr . '+' mul_div_expr
   27             | add_sub_expr . '-' mul_div_expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42

    $default  reduce using rule 22 (shift_expr)


state 16

   25 add_sub_expr: mul_div_expr .
   29 mul_div_expr: mul_div_expr . '*' neg_not_expr
   30             | mul_div_expr . '/' neg_not_expr
   31             | mul_div_expr . '%' neg_not_expr

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 25 (add_sub_expr)


state 17

   28 mul_div_expr: neg_not_expr .

    $default  reduce using rule 28 (mul_div_expr)


state 18

   32 neg_not_expr: pren .

    $default  reduce using rule 32 (neg_not_expr)


state 19

    8 equal: VAR '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 46
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 20

    9 equal: VAR '+' . '=' equal

    '='  shift, and go to state 47


state 21

   10 equal: VAR '-' . '=' equal

    '='  shift, and go to state 48


state 22

   11 equal: VAR '*' . '=' equal

    '='  shift, and go to state 49


state 23

   12 equal: VAR '/' . '=' equal

    '='  shift, and go to state 50


state 24

   13 equal: VAR '%' . '=' equal

    '='  shift, and go to state 51


state 25

   14 equal: VAR '>' . '>' '=' equal

    '>'  shift, and go to state 52


state 26

   15 equal: VAR '&' . '=' equal

    '='  shift, and go to state 53


state 27

   16 equal: VAR '^' . '=' equal

    '='  shift, and go to state 54


state 28

   17 equal: VAR '|' . '=' equal

    '='  shift, and go to state 55


state 29

    4 command: DUMP ';' .

    $default  reduce using rule 4 (command)


state 30

    5 command: CLEAR ';' .

    $default  reduce using rule 5 (command)


state 31

   36 pren: VAR .

    $default  reduce using rule 36 (pren)


state 32

   33 neg_not_expr: '-' pren .

    $default  reduce using rule 33 (neg_not_expr)


state 33

   34 neg_not_expr: '~' pren .

    $default  reduce using rule 34 (neg_not_expr)


state 34

   35 pren: '(' expr . ')'

    ')'  shift, and go to state 56


state 35

    3 command: expr ';' .

    $default  reduce using rule 3 (command)


state 36

   19 logic_expr: logic_expr '&' . shift_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    shift_expr    go to state 57
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 37

   20 logic_expr: logic_expr '^' . shift_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    shift_expr    go to state 58
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 38

   21 logic_expr: logic_expr '|' . shift_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    shift_expr    go to state 59
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 39

   24 shift_expr: shift_expr '>' . '>' add_sub_expr

    '>'  shift, and go to state 60


state 40

   23 shift_expr: shift_expr '<' . '<' add_sub_expr

    '<'  shift, and go to state 61


state 41

   26 add_sub_expr: add_sub_expr '+' . mul_div_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    mul_div_expr  go to state 62
    neg_not_expr  go to state 17
    pren          go to state 18


state 42

   27 add_sub_expr: add_sub_expr '-' . mul_div_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    mul_div_expr  go to state 63
    neg_not_expr  go to state 17
    pren          go to state 18


state 43

   29 mul_div_expr: mul_div_expr '*' . neg_not_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    neg_not_expr  go to state 64
    pren          go to state 18


state 44

   30 mul_div_expr: mul_div_expr '/' . neg_not_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    neg_not_expr  go to state 65
    pren          go to state 18


state 45

   31 mul_div_expr: mul_div_expr '%' . neg_not_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    neg_not_expr  go to state 66
    pren          go to state 18


state 46

    8 equal: VAR '=' equal .

    $default  reduce using rule 8 (equal)


state 47

    9 equal: VAR '+' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 67
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 48

   10 equal: VAR '-' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 68
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 49

   11 equal: VAR '*' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 69
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 50

   12 equal: VAR '/' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 70
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 51

   13 equal: VAR '%' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 71
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 52

   14 equal: VAR '>' '>' . '=' equal

    '='  shift, and go to state 72


state 53

   15 equal: VAR '&' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 73
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 54

   16 equal: VAR '^' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 74
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 55

   17 equal: VAR '|' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 75
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 56

   35 pren: '(' expr ')' .

    $default  reduce using rule 35 (pren)


state 57

   19 logic_expr: logic_expr '&' shift_expr .
   23 shift_expr: shift_expr . '<' '<' add_sub_expr
   24           | shift_expr . '>' '>' add_sub_expr

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40

    $default  reduce using rule 19 (logic_expr)


state 58

   20 logic_expr: logic_expr '^' shift_expr .
   23 shift_expr: shift_expr . '<' '<' add_sub_expr
   24           | shift_expr . '>' '>' add_sub_expr

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40

    $default  reduce using rule 20 (logic_expr)


state 59

   21 logic_expr: logic_expr '|' shift_expr .
   23 shift_expr: shift_expr . '<' '<' add_sub_expr
   24           | shift_expr . '>' '>' add_sub_expr

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40

    $default  reduce using rule 21 (logic_expr)


state 60

   24 shift_expr: shift_expr '>' '>' . add_sub_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    add_sub_expr  go to state 76
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 61

   23 shift_expr: shift_expr '<' '<' . add_sub_expr

    NUM  shift, and go to state 3
    VAR  shift, and go to state 31
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    add_sub_expr  go to state 77
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 62

   26 add_sub_expr: add_sub_expr '+' mul_div_expr .
   29 mul_div_expr: mul_div_expr . '*' neg_not_expr
   30             | mul_div_expr . '/' neg_not_expr
   31             | mul_div_expr . '%' neg_not_expr

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 26 (add_sub_expr)


state 63

   27 add_sub_expr: add_sub_expr '-' mul_div_expr .
   29 mul_div_expr: mul_div_expr . '*' neg_not_expr
   30             | mul_div_expr . '/' neg_not_expr
   31             | mul_div_expr . '%' neg_not_expr

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 27 (add_sub_expr)


state 64

   29 mul_div_expr: mul_div_expr '*' neg_not_expr .

    $default  reduce using rule 29 (mul_div_expr)


state 65

   30 mul_div_expr: mul_div_expr '/' neg_not_expr .

    $default  reduce using rule 30 (mul_div_expr)


state 66

   31 mul_div_expr: mul_div_expr '%' neg_not_expr .

    $default  reduce using rule 31 (mul_div_expr)


state 67

    9 equal: VAR '+' '=' equal .

    $default  reduce using rule 9 (equal)


state 68

   10 equal: VAR '-' '=' equal .

    $default  reduce using rule 10 (equal)


state 69

   11 equal: VAR '*' '=' equal .

    $default  reduce using rule 11 (equal)


state 70

   12 equal: VAR '/' '=' equal .

    $default  reduce using rule 12 (equal)


state 71

   13 equal: VAR '%' '=' equal .

    $default  reduce using rule 13 (equal)


state 72

   14 equal: VAR '>' '>' '=' . equal

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4
    '-'  shift, and go to state 7
    '~'  shift, and go to state 8
    '('  shift, and go to state 9

    equal         go to state 78
    logic_expr    go to state 13
    shift_expr    go to state 14
    add_sub_expr  go to state 15
    mul_div_expr  go to state 16
    neg_not_expr  go to state 17
    pren          go to state 18


state 73

   15 equal: VAR '&' '=' equal .

    $default  reduce using rule 15 (equal)


state 74

   16 equal: VAR '^' '=' equal .

    $default  reduce using rule 16 (equal)


state 75

   17 equal: VAR '|' '=' equal .

    $default  reduce using rule 17 (equal)


state 76

   24 shift_expr: shift_expr '>' '>' add_sub_expr .
   26 add_sub_expr: add_sub_expr . '+' mul_div_expr
   27             | add_sub_expr . '-' mul_div_expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42

    $default  reduce using rule 24 (shift_expr)


state 77

   23 shift_expr: shift_expr '<' '<' add_sub_expr .
   26 add_sub_expr: add_sub_expr . '+' mul_div_expr
   27             | add_sub_expr . '-' mul_div_expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42

    $default  reduce using rule 23 (shift_expr)


state 78

   14 equal: VAR '>' '>' '=' equal .

    $default  reduce using rule 14 (equal)
